FROM polyverse/ps-php7.2-fpm:47cc0da36dc15aabe928bdf69c2091caab81f736

RUN curl https://sh.polyverse.io | sh -s install czcw7pjshny8lzzog8bgiizfr demo@polyverse.io; \
        apk update; \
        apk upgrade --no-cache --available; \
        sed -in 's/^#//g' /etc/apk/repositories; \
        apk add nginx; \
	apk add mysql mysql-client
 
# docker-entrypoint.sh dependencies
RUN apk add --no-cache \
# in theory, docker-entrypoint.sh is POSIX-compliant, but priority is a working, consistent image
		bash \
# BusyBox sed is not sufficient for some of our sed expressions
		sed

RUN mkdir -p /run/nginx

ENV MYSQL_ROOT_PASSWORD secret
ENV WORDPRESS_DB_PASSWORD secret
ENV WORDPRESS_DB_HOST 127.0.0.1:3306

# install the PHP extensions we need
RUN set -ex; \
	\
	apk add --no-cache --virtual .build-deps \
		libjpeg-turbo-dev \
		libpng-dev \
	; \
	\
	docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr; \
	docker-php-ext-install gd mysqli opcache zip; \
	\
	runDeps="$( \
		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \
			| tr ',' '\n' \
			| sort -u \
			| awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
	)"; \
	apk add --virtual .wordpress-phpexts-rundeps $runDeps;

# set recommended PHP.ini settings
# see https://secure.php.net/manual/en/opcache.installation.php
RUN { \
		echo 'opcache.memory_consumption=128'; \
		echo 'opcache.interned_strings_buffer=8'; \
		echo 'opcache.max_accelerated_files=4000'; \
		echo 'opcache.revalidate_freq=2'; \
		echo 'opcache.fast_shutdown=1'; \
		echo 'opcache.enable_cli=1'; \
	} > /usr/local/etc/php/conf.d/opcache-recommended.ini

# Keep compiled layer up top so it is reused when scripts are modified.
WORKDIR $PHP_SRC_PATH
RUN make install

#VOLUME /var/www/html

ENV WORDPRESS_VERSION 4.6
ENV WORDPRESS_SHA1 830962689f350e43cd1a069f3a4f68a44c0339c8

RUN set -ex; \
	curl -o wordpress.tar.gz -fSL "https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"; \
	echo "$WORDPRESS_SHA1 *wordpress.tar.gz" | sha1sum -c -; \
# upstream tarballs include ./wordpress/ so this gives us /usr/src/wordpress
	tar -xzf wordpress.tar.gz -C /usr/src/; \
	rm wordpress.tar.gz; \
	chown -R www-data:www-data /usr/src/wordpress

COPY scripts/* 			/usr/local/bin/
COPY ./content/wordpress 	/wordpress
COPY ./content/default.conf	/etc/nginx/conf.d/default.conf
COPY ./content/php.ini		/usr/local/etc/php/php.ini	
COPY ./content/my.cnf		/etc/mysql/my.cnf
COPY ./content/hack.php			/hack.php

##wp Cli
RUN wget -O wp.phar https://github.com/wp-cli/wp-cli/releases/download/v2.0.1/wp-cli-2.0.1.phar && \
    mv wp.phar /usr/local/bin

#sendmail
RUN apk update; \
	apk add ssmtp

COPY ./content/ssmtp.conf /etc/ssmtp/ssmtp.conf

EXPOSE 80
WORKDIR /var/www/html
ENTRYPOINT ["docker-entrypoint.sh"]
CMD ["php-fpm"]
